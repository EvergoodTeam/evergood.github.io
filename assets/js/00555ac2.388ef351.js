"use strict";(self.webpackChunkevergood_docs=self.webpackChunkevergood_docs||[]).push([[680],{4137:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(r),k=a,m=d["".concat(s,".").concat(k)]||d[k]||p[k]||o;return r?n.createElement(m,l(l({ref:t},u),{},{components:r})):n.createElement(m,l({ref:t},u))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2104:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(4137));const o={sidebar_label:"Blocks",sidebar_position:1,id:"blocks",title:"Blocks",description:"Adding blocks",slug:"/chassis/blocks"},l=void 0,i={unversionedId:"chassis/blocks",id:"chassis/blocks",title:"Blocks",description:"Adding blocks",source:"@site/docs/chassis/blocks.mdx",sourceDirName:"chassis",slug:"/chassis/blocks",permalink:"/docs/chassis/blocks",draft:!1,editUrl:"https://github.com/EvergoodTeam/evergoodteam.github.io/tree/main/docs/chassis/blocks.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Blocks",sidebar_position:1,id:"blocks",title:"Blocks",description:"Adding blocks",slug:"/chassis/blocks"},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/chassis/installation"},next:{title:"Items",permalink:"/docs/chassis/items"}},s={},c=[{value:"Creating your Block",id:"creating-your-block",level:3},{value:"ItemGroup",id:"itemgroup",level:3},{value:"Registering",id:"registering",level:3},{value:"Result",id:"result",level:3},{value:"Creating a Pillar Block",id:"creating-a-pillar-block",level:3}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"creating-your-block"},"Creating your Block"),(0,a.kt)("p",null,"Block objects can be created through the ",(0,a.kt)("inlineCode",{parentName:"p"},"BlockBase")," class.",(0,a.kt)("br",{parentName:"p"}),"\n","You can customize your Block from the ground up using ",(0,a.kt)("inlineCode",{parentName:"p"},"FabricBlockSettings"),", or use the available methods with specific parameters."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Block RUBY_ORE = new BlockBase(Material.STONE, 2.5f, 7.0f, BlockSoundGroup.STONE);\n")),(0,a.kt)("p",null,"You can append the ",(0,a.kt)("inlineCode",{parentName:"p"},"addTo()")," method to quickly add it to a list. This can be useful to later register all your blocks, since you'll just have to cycle through its contents."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"List<Block> BLOCKS = new ArrayList<>();\n\nBlock RUBY_ORE = new BlockBase(Material.STONE, 2.5f, 7.0f, BlockSoundGroup.STONE).addTo(BLOCKS);\n")),(0,a.kt)("h3",{id:"itemgroup"},"ItemGroup"),(0,a.kt)("p",null,"With this Block we can create an ",(0,a.kt)("inlineCode",{parentName:"p"},"ItemGroup"),", a.k.a. a tab in the creative menu, to which you can add all your blocks and items."),(0,a.kt)("p",null,"To do so we can utilize the the ",(0,a.kt)("inlineCode",{parentName:"p"},"ItemGroupBase")," class."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'ItemGroup YOURMOD_GROUP = new ItemGroupBase("yourmodid", "itemgroup", RUBY_ORE).group;\n')),(0,a.kt)("h3",{id:"registering"},"Registering"),(0,a.kt)("p",null,"Registering is done with the ",(0,a.kt)("inlineCode",{parentName:"p"},"RegistryHandler")," class."),(0,a.kt)("p",null,"Now we can register this Block and give it an Item form that player can hold in their inventory with ",(0,a.kt)("inlineCode",{parentName:"p"},"registerBlockAndItem()"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'RegistryHandler.registerBlockAndItem("yourmodid", "ruby_ore", RUBY_ORE, YOURMOD_GROUP);\n')),(0,a.kt)("h3",{id:"result"},"Result"),(0,a.kt)("p",null,"Your code should now look something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MyMod.java"',title:'"MyMod.java"'},'Block RUBY_ORE = new BlockBase(Material.STONE, 2.5f, 7.0f, BlockSoundGroup.STONE);\n\nItemGroup YOURMOD_GROUP = new ItemGroupBase("yourmodid", "itemgroup", RUBY_ORE).group;\n\n@Override\npublic void onInitialize() {\n\n    RegistryHandler.registerBlockAndItem("yourmodid", "ruby_ore", RUBY_ORE, YOURMOD_GROUP);\n}\n')),(0,a.kt)("h3",{id:"creating-a-pillar-block"},"Creating a Pillar Block"),(0,a.kt)("p",null,"Creating a Pillar Block object can be useful when working with blockstates and models.",(0,a.kt)("br",{parentName:"p"}),"\n","It is required when dealing with the ",(0,a.kt)("inlineCode",{parentName:"p"},"ChassisModelProvider"),", which we'll be talking about when dealing with ",(0,a.kt)("a",{parentName:"p",href:"/docs/chassis/resources"},"ResourcePacks"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Block RUBY_PILLAR = new PillarBase(Material.STONE, 4.0f, 7.0f, BlockSoundGroup.STONE);\n")))}p.isMDXComponent=!0}}]);