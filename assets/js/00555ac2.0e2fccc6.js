"use strict";(self.webpackChunkevergood_docs=self.webpackChunkevergood_docs||[]).push([[680],{4137:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,k=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(k,i(i({ref:t},u),{},{components:r})):n.createElement(k,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2104:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(7462),o=(r(7294),r(4137));const a={sidebar_label:"Blocks",sidebar_position:1,id:"blocks",title:"Blocks",description:"Adding blocks",slug:"/chassis/blocks"},i=void 0,s={unversionedId:"chassis/blocks",id:"chassis/blocks",title:"Blocks",description:"Adding blocks",source:"@site/docs/chassis/blocks.mdx",sourceDirName:"chassis",slug:"/chassis/blocks",permalink:"/docs/chassis/blocks",draft:!1,editUrl:"https://github.com/EvergoodTeam/evergoodteam.github.io/tree/main/docs/chassis/blocks.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Blocks",sidebar_position:1,id:"blocks",title:"Blocks",description:"Adding blocks",slug:"/chassis/blocks"},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/chassis/installation"},next:{title:"Items",permalink:"/docs/chassis/items"}},l={},c=[{value:"Creating your Block",id:"creating-your-block",level:3},{value:"ItemGroup",id:"itemgroup",level:3},{value:"Registering",id:"registering",level:3},{value:"Result",id:"result",level:3}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"As of ",(0,o.kt)("inlineCode",{parentName:"p"},"1.2.3"),", this is outdated. Refer to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/EvergoodTeam/Chassis/blob/1.19.2/src/main/java/evergoodteam/chassis/ChassisTestFeatures.java"},"this test class")," instead for the time being.")),(0,o.kt)("h3",{id:"creating-your-block"},"Creating your Block"),(0,o.kt)("p",null,"Block objects can be created through the ",(0,o.kt)("inlineCode",{parentName:"p"},"BlockBase")," class.",(0,o.kt)("br",{parentName:"p"}),"\n","You can customize your Block from the ground up using ",(0,o.kt)("inlineCode",{parentName:"p"},"FabricBlockSettings"),", or use the available methods with specific parameters."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"public static final Block RUBY_ORE = new BlockBase(Material.STONE, 2.5f, 7.0f, BlockSoundGroup.STONE);\n")),(0,o.kt)("p",null,"You may also provide a ",(0,o.kt)("inlineCode",{parentName:"p"},"List")," to which add a Block as soon as its object is created. This can be useful to later register all your blocks, since you'll just have to cycle through its contents."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"public static final List<Block> BLOCKS = new ArrayList<>();\n\npublic static final Block RUBY_ORE = new BlockBase(BLOCKS, Material.STONE, 2.5f, 7.0f, BlockSoundGroup.STONE);\n")),(0,o.kt)("h3",{id:"itemgroup"},"ItemGroup"),(0,o.kt)("p",null,"With this Block we can create an ",(0,o.kt)("inlineCode",{parentName:"p"},"ItemGroup"),", a.k.a. a tab in the creative menu, to which you can add all your blocks and items."),(0,o.kt)("p",null,"To do so we can utilize the the ",(0,o.kt)("inlineCode",{parentName:"p"},"ItemGroupBase")," class."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'public static final ItemGroup YOURMOD_GROUP = new ItemGroupBase("yourmodid", "itemgroup", RUBY_ORE).group;\n')),(0,o.kt)("h3",{id:"registering"},"Registering"),(0,o.kt)("p",null,"Registering is done with the ",(0,o.kt)("inlineCode",{parentName:"p"},"RegistryHandler")," class."),(0,o.kt)("p",null,"Now we can register this Block and give it an Item form that player can hold in their inventory with ",(0,o.kt)("inlineCode",{parentName:"p"},"registerBlockAndItem()"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'RegistryHandler.registerBlockAndItem("yourmodid", "ruby_ore", RUBY_ORE, YOURMOD_GROUP);\n')),(0,o.kt)("h3",{id:"result"},"Result"),(0,o.kt)("p",null,"Your code should now look something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MyMod.java"',title:'"MyMod.java"'},'public static final Block RUBY_ORE = new BlockBase(Material.STONE, 2.5f, 7.0f, BlockSoundGroup.STONE);\n\npublic static final ItemGroup YOURMOD_GROUP = new ItemGroupBase("yourmodid", "itemgroup", RUBY_ORE).group;\n\n@Override\npublic void onInitialize() {\n\n    RegistryHandler.registerBlockAndItem("yourmodid", "ruby_ore", RUBY_ORE, YOURMOD_GROUP);\n}\n')))}p.isMDXComponent=!0}}]);